import streamlit as st
import numpy as np
from PIL import Image
import tensorflow as tf

# ЁЯФ╣ Load TFLite model
interpreter = tf.lite.Interpreter(model_path="plant_disease_model.tflite")
interpreter.allocate_tensors()

input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

class_labels = ['Pepper___Bacterial_spot', 'Tomato___Healthy', 'Tomato___Late_blight']

medicine_dict = {
    "English": {
        "Tomato___Late_blight": "Spray with fungicides like Captan or Mancozeb.",
        "Tomato___Healthy": "The plant is healthy. No medicine required.",
        "Pepper___Bacterial_spot": "Spray with copper spray or streptomycin."
    },
    "Hindi": {
        "Tomato___Late_blight": "рдХрдкреНрддрд╛рди рдпрд╛ рдореИрдирдХреЛрдЬреЗрдм рдЬреИрд╕реЗ рдлрдлреВрдВрджрдирд╛рд╢рдХреЛрдВ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред",
        "Tomato___Healthy": "рдкреМрдзрд╛ рд╕реНрд╡рд╛рд╕реНрде рд╣реИ, рдХрд┐рд╕реА рджрд╡рд╛ рдХреА рдЖрд╡рд╢реНрдпрдХреНрддрд╛ рдирд╣реАрдВ рд╣реИред",
        "Pepper___Bacterial_spot": "рдХреЙрдкрд░ рд╕реНрдкреНрд░реЗ рдпрд╛ рд╕реНрдЯреНрд░реЗрдкреНрдЯреЛрдорд╛рдпрд╕рд┐рди рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред"
    }
}

language = st.selectbox("ЁЯМР Choose Language / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ", ["English", "Hindi"])

st.title("ЁЯМ┐ AI Farmer Helper" if language == "English" else "ЁЯМ┐ рдПрдЖрдИ рдХрд┐рд╕рд╛рди рд╕рд╣рд╛рдпрдХ")
st.markdown("Upload a crop leaf image to detect disease and get treatment." if language == "English" else "рдлрд╕рд▓ рдХреА рдкрддреНрддреА рдХреА рддрд╕реНрд╡реАрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдФрд░ рдмреАрдорд╛рд░реА рдХреА рдкрд╣рдЪрд╛рди рдХрд░реЗрдВред")

uploaded_file = st.file_uploader("ЁЯУ╖ Upload Leaf Image", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    st.image(uploaded_file, caption="ЁЯУ╕", use_column_width=True)

    if st.button("ЁЯФН Detect Disease" if language == "English" else "ЁЯФН рдмреАрдорд╛рд░реА рдХреА рдкрд╣рдЪрд╛рди рдХрд░реЗрдВ"):
        img = Image.open(uploaded_file).resize((128, 128)).convert('RGB')
        img_array = np.expand_dims(np.array(img) / 255.0, axis=0).astype(np.float32)

        interpreter.set_tensor(input_details[0]['index'], img_array)
        interpreter.invoke()
        prediction = interpreter.get_tensor(output_details[0]['index'])

        class_index = np.argmax(prediction)
        disease = class_labels[class_index]
        confidence = round(np.max(prediction) * 100, 2)

        medicine = medicine_dict[language].get(disease, "No treatment info available." if language == "English" else "рдЗрд▓рд╛рдЬ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред")

        st.success(f"ЁЯжа Disease: {disease}" if language == "English" else f"ЁЯжа рдмреАрдорд╛рд░реА: {disease}")
        st.info(f"ЁЯТК Treatment: {medicine}" if language == "English" else f"ЁЯТК рдЙрдкрдЪрд╛рд░: {medicine}")
        st.caption(f"ЁЯФО Confidence: {confidence}%")
